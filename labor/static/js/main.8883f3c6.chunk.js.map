{"version":3,"sources":["fonts/Roboto-Regular.ttf","fonts/Roboto-Medium.ttf","fonts/Roboto-Bold.ttf","components/helper-components/Button.tsx","components/helper-components/Card.tsx","components/helper-components/Spinner.tsx","lib/merge.ts","components/helper-components/Markdown.tsx","components/form-components/DatePicker.tsx","components/form-components/TextInput.tsx","components/helper-components/StyledSelect.tsx","components/form-components/Select.tsx","components/form-components/SingleSelect.tsx","components/form-components/Boolean.tsx","components/helper-components/CircleIcon.tsx","components/form-components/Multiselect.tsx","components/form-components/TextArea.tsx","lib/states.ts","components/form-components/StateSelect.tsx","lib/sections.ts","components/form-components/Caret.tsx","components/form-components/Section.tsx","hooks/useKeyPress.ts","components/form-components/Number.tsx","components/form-components/File.tsx","forms/index.ts","components/form-components/Checkbox.tsx","contexts/language.tsx","hooks/useLocalStorage.ts","lib/validation.ts","lib/inline.ts","contexts/form.tsx","components/Sidebar.tsx","components/Question.tsx","components/PDF.tsx","components/Form.tsx","components/USDR.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Button","props","label","rest","className","primary","fill","gap","style","icon","paddingLeft","reverse","paddingRight","paddingTop","paddingBottom","Paragraph","margin","fontWeight","undefined","Card","children","otherProps","Box","background","border","borderRadius","spinning","version","viewBox","width","height","opacity","d","attributeName","type","from","to","dur","repeatCount","Spinner","align","justify","merge","result","sources","source","Object","keys","key","ListItem","styleProps","Markdown","size","headings","map","n","component","Heading","level","vertical","components","li","p","span","a","target","rel","DatePicker","v","question","useContext","FormContext","values","setValue","value","id","moment","toDate","maxWidth","pad","horizontal","onChange","date","utc","format","clearIcon","calendarIcon","TextInput","errors","hasError","Boolean","e","StyledSelect","useState","open","setOpen","onOpen","onClose","Select","translateCopy","options","console","error","option","name","a11yTitle","top","labelKey","valueKey","reduce","SingleSelectRadio","o","RadioButtonGroup","split","form","instructions","SingleSelect","CircleIcon","color","s","b","flex","shrink","Multiselect","isSelected","includes","bottom","CheckBox","checked","direction","right","fontSize","selectedOptions","selected","push","splice","indexOf","additionalValues","additionalKeys","sections","length","omit","filter","onSelect","TextArea","states","state","en","es","zh","StateSelect","getSections","sectionIds","include","section","priorities","forEach","i","ordering","sectionIDs","sortSections","unblocked","Set","nonEmptySections","first","some","s2","add","other","Caret","transform","xmlns","stroke","strokeWidth","Section","optionPressed","targetKey","keyPressed","setKeyPressed","useEffect","downHandler","upHandler","window","addEventListener","removeEventListener","useKeyPress","sectionGroup","backgroundColor","index","icons","sort","i1","i2","localeCompare","overflowWrap","transitionDuration","overflow","onClick","title","onToggle","hoverIndicator","maxHeight","content","Number","typeProps","allowNegative","prefix","thousandSeparator","decimalScale","allowEmptyFormatting","mask","customInput","GrommetTextInput","onValueChange","floatValue","File","translateByID","onDrop","acceptedFiles","Promise","all","file","resolve","reader","FileReader","onerror","onabort","onload","contents","encode","readAsArrayBuffer","files","f","useDropzone","minSize","maxSize","accept","getRootProps","getInputProps","isDragActive","isFocused","onRemove","alignContent","outline","cursor","display","left","FormNextLink","Image","src","Checkmark","FormClose","padding","getFlattenedQuestions","questions","flattenedQuestions","switch","getSwitch","subQuestions","typeComponentMappings","shorttext","dropdown","boolean","multiselect","longtext","decimal","NumberComponent","integer","phone","ssn","checkbox","classnames","errored","Sections","questionSwitch","switchKeys","toString","Array","isArray","val","initialState","language","setLanguage","LanguageContext","createContext","LanguageProvider","defaultValue","item","localStorage","getItem","JSON","parse","storedValue","setStoredValue","setItem","stringify","useLocalStorage","detectedLanguageCode","navigator","Provider","getInstructions","c","Error","isQuestionValid","required","dependencies","validate","schema","copyID","strict","presence","Joi","string","validator","number","precision","min","max","allow","custom","helpers","isValid","find","array","items","regex","object","optional","valid","validation","validationValue","startsWith","slice","RegExp","test","ISO_8601","od","isSameOrAfter","isSameOrBefore","unit","transformInlineDefinitions","definitions","transformInlineDefinitionsQuestions","qi","switchKey","oldSwitch","newSwitch","si","definitionID","replace","definition","pi","pages","setError","FormProvider","setForm","setValues","setErrors","completion","setCompletion","pageIndex","setPageIndex","formValidationError","setFormValidationError","ky","get","text","formSample","yaml","safeLoad","json","sampleContents","message","rawForm","effect","catch","err","useCallback","copy","variables","m","questionID","String","document","description","querySelector","createElement","setAttribute","head","appendChild","log","gtag","amplitude","getInstance","logEvent","newValues","k","validationErrors","newErrors","page","dep","q","depErrors","canContinueFromPage","questionIds","every","canContinue","setPage","scrollTo","clearForm","Sidebar","ResponsiveContext","currentPage","maxCompletedPage","range","j","percent","Math","floor","canClickPage","seal","objectFit","grow","disabled","FormTrash","marginRight","Text","disabledKey","Question","previous","Component","switchComponent","autoscroll","scrollIntoView","behavior","isNote","isStriped","basis","ref","el","Font","register","family","fonts","regular","medium","bold","styles","StyleSheet","create","flexDirection","fontFamily","pageContent","flexGrow","heading","marginBottom","questionTitle","questionAnswer","sectionTitle","sectionContent","questionSection","borderTop","linkRegex","urlRegex","stripBasicMarkdown","contentParts","finalParts","part","url","marginLeft","Icon","alignItems","justifyContent","PDF","concat","multiselectAnswers","optionId","wrap","marginTop","getValue","isPresentationalQuestion","hasPageBreak","break","Form","pageTitles","pageComponents","previousURL","setPreviousURL","onDownload","fileName","pdf","toBlob","blob","msSaveBlob","body","URL","createObjectURL","click","revokeObjectURL","FormPrevious","FormNext","USDR","Header","Footer","elevation","flexShrink","href","tabIndex","role","aria-label","aria-hidden","fillRule","init","shim","TextEncoder","sizing","theme","global","breakpoints","small","colors","dark","light","focus","control","radius","paragraph","large","xlarge","xxlarge","1","2","3","4","5","6","select","container","radioButton","button","checkBox","check","App","Grommet","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8883f3c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Roboto-Regular.11eabca2.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Medium.58aef543.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Bold.e07df86c.ttf\";","import React from 'react'\nimport { Button as GrommetButton, ButtonProps, Paragraph } from 'grommet'\n\nconst Button: React.FC<ButtonProps & Omit<JSX.IntrinsicElements['button'], 'color'>> = (props) => {\n  const { label, ...rest } = props\n\n  return (\n    <GrommetButton\n      className={props.primary ? 'primary-button' : 'default-button'}\n      fill={false}\n      gap=\"xxsmall\"\n      style={\n        props.icon\n          ? {\n              paddingLeft: props.reverse ? '24px' : '12px',\n              paddingRight: props.reverse ? '12px' : '24px',\n              paddingTop: '6px',\n              paddingBottom: '6px',\n            }\n          : {\n              paddingTop: '6px',\n              paddingBottom: '6px',\n            }\n      }\n      label={\n        label ? (\n          <Paragraph margin=\"none\" style={{ fontWeight: 500 }}>\n            {label}\n          </Paragraph>\n        ) : undefined\n      }\n      {...rest}\n    />\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport { Box, BoxProps } from 'grommet'\n\ninterface Props extends BoxProps {\n  ref?: React.Ref<HTMLDivElement>\n}\n\nconst Card: React.FC<Props> = (props) => {\n  const { children, ...otherProps } = props\n  return (\n    <Box\n      className=\"card\"\n      background=\"#FFFFFF\"\n      style={{\n        border: '2px solid #CCCCCC',\n        borderRadius: '8px',\n      }}\n      {...otherProps}\n    >\n      {children}\n    </Box>\n  )\n}\n\nexport default Card\n","// https://codesandbox.io/s/loaders-and-spinners-4jltk?file=/components/Spinner/SpinnerBrand.js:0-719\n\nimport React from 'react'\nimport { Box } from 'grommet'\n\nconst spinning = (\n  <svg version=\"1.1\" viewBox=\"0 0 32 32\" width=\"28px\" height=\"28px\" fill=\"#7D4CDB\">\n    <path opacity=\".25\" d=\"M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4\" />\n    <path d=\"M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z\">\n      <animateTransform\n        attributeName=\"transform\"\n        type=\"rotate\"\n        from=\"0 16 16\"\n        to=\"360 16 16\"\n        dur=\"0.8s\"\n        repeatCount=\"indefinite\"\n      />\n    </path>\n  </svg>\n)\n\nexport const Spinner = () => (\n  <Box align=\"center\" justify=\"center\">\n    {spinning}\n  </Box>\n)\n","export function merge(...sources: Record<string, any>[]) {\n  const result: Record<string, any> = {}\n  for (const source of sources) {\n    for (const key of Object.keys(source)) {\n      if (source[key]) {\n        result[key] = source[key]\n      }\n    }\n  }\n\n  return result\n}\n","import React from 'react'\nimport { Box, Markdown as GrommetMarkdown, Paragraph, ParagraphProps, Heading } from 'grommet'\nimport { MarginType } from 'grommet/utils'\nimport { merge } from '../../lib/merge'\n\nconst ListItem: React.FC = ({ children, ...styleProps }) => {\n  return (\n    <li>\n      <Paragraph fill={true} margin=\"none\" {...styleProps}>\n        {children}\n      </Paragraph>\n    </li>\n  )\n}\n\ninterface Props {\n  size?: ParagraphProps['size']\n  margin?: MarginType\n}\n\nexport const Markdown: React.FC<Props> = ({ margin, size, children }) => {\n  // Grommet allows you to override what React component is used for various\n  // HTML elements. It handles a few components by default, but there are a few\n  // extra cases we want to handle (or customize).\n  const headings = [1, 2, 3, 4, 5, 6].map((n) => ({\n    [`h${n}`]: {\n      /* eslint-disable-next-line react/display-name */\n      component: (props: any) => <Heading level={n as any} {...props} />,\n      props: merge({ margin: { vertical: n > 4 ? 'none' : 'small' } }, { margin, size }),\n    },\n  }))\n  return (\n    <Box className=\"markdown\">\n      <GrommetMarkdown\n        components={merge(\n          {\n            li: {\n              component: ListItem,\n              props: merge({ margin, size }),\n            },\n            p: {\n              component: Paragraph,\n              props: merge({ fill: true }, { margin, size }),\n            },\n            span: {\n              component: Paragraph,\n              props: merge({ fill: true, size: 'small' }, { margin, size }),\n            },\n            a: {\n              props: { target: '_blank', rel: 'noopener noreferrer' },\n            },\n          },\n          ...headings\n        )}\n      >\n        {children}\n      </GrommetMarkdown>\n    </Box>\n  )\n}\n","import React, { useContext } from 'react'\nimport ReactDatePicker from 'react-date-picker'\nimport './date-picker.css'\nimport { Question } from '../../lib/types'\nimport { FormContext } from '../../contexts/form'\nimport moment from 'moment'\nimport { Box } from 'grommet'\n\nconst DatePicker: React.FC<{ question: Question }> = (props) => {\n  const { question } = props\n  const { values, setValue } = useContext(FormContext)\n  const value = values[question.id] as string | undefined\n\n  let v: Date | undefined\n  if (value) {\n    v = moment(value, 'YYYY-MM-DDTHH:mm:ssZ', true).toDate()\n  }\n\n  const onChange = (date: Date | Date[]) => {\n    if (!date) {\n      setValue(question, undefined)\n      return\n    }\n\n    setValue(question, moment.utc(date as Date).format('YYYY-MM-DDTHH:mm:ssZ'))\n  }\n\n  /**\n   * TODO:\n   * - Would be nice if delete moved your cursor to the previous date chunk\n   *   for example, pressing delete again after having deleted the year\n   *   should move your cursor to the end of your day value.\n   * - On mobile, the keyboard pops up. Good/bad??\n   * - On defocus, the calendar needs to hide.\n   */\n\n  return (\n    <Box style={{ maxWidth: '600px' }} pad={{ horizontal: 'large' }}>\n      <ReactDatePicker className=\"date-picker\" onChange={onChange} value={v} clearIcon={null} calendarIcon={null} />\n    </Box>\n  )\n}\n\nexport default DatePicker\n","import React, { useContext } from 'react'\nimport { Box, TextInput as GrommetTextInput } from 'grommet'\nimport { FormContext } from '../../contexts/form'\nimport { Question } from '../../lib/types'\n\ninterface Props {\n  question: Question\n}\n\nconst TextInput: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, errors } = useContext(FormContext)\n  const value = values[question.id]\n\n  const hasError = Boolean(errors[question.id])\n  return (\n    <Box pad={{ horizontal: 'large' }}>\n      <GrommetTextInput\n        className={hasError ? 'text-input errored' : 'text-input'}\n        value={(value as string) || ''}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setValue(question, e.target.value)}\n        style={{ maxWidth: '600px' }}\n      />\n    </Box>\n  )\n}\n\nexport default TextInput\n","import React, { useState } from 'react'\nimport { Select as GrommetSelect, Box, SelectProps } from 'grommet'\n\nexport const StyledSelect: React.FC<SelectProps> = (props) => {\n  const [open, setOpen] = useState(false)\n\n  return (\n    <Box style={{ maxWidth: '600px' }} className={open ? 'dropdown dropdown-open' : 'dropdown'}>\n      <GrommetSelect onOpen={() => setOpen(true)} onClose={() => setOpen(false)} {...props} />\n    </Box>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Question } from '../../lib/types'\nimport { Box } from 'grommet'\nimport { FormContext } from '../../contexts/form'\nimport { StyledSelect } from '../helper-components/StyledSelect'\n\ninterface Props {\n  [key: string]: any\n  question: Question\n}\n\nconst Select: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, translateCopy } = useContext(FormContext)\n  const value = values[question.id]\n\n  if (!props.question) {\n    return <Box />\n  }\n\n  if (!question.options) {\n    console.error('expected question to have options')\n    return null\n  }\n\n  const options = question.options.map((option) => ({ name: translateCopy(option.name), id: option.id }))\n\n  return (\n    <Box pad={{ horizontal: 'large' }}>\n      <StyledSelect\n        a11yTitle={translateCopy(question.name)}\n        margin={{ top: 'xsmall' }}\n        options={options}\n        labelKey=\"name\"\n        valueKey={{\n          key: 'id',\n          reduce: true,\n        }}\n        value={value as string}\n        onChange={({ option }: { option: { id: string; name: string } }) => setValue(question, option.id)}\n      />\n    </Box>\n  )\n}\nexport default Select\n","import React, { useContext } from 'react'\nimport { Question } from '../../lib/types'\nimport { Box, RadioButtonGroup } from 'grommet'\nimport { FormContext } from '../../contexts/form'\n\ninterface Props {\n  question: Question\n  onChange?: (id: string) => void\n}\n\nconst SingleSelectRadio: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, translateCopy } = useContext(FormContext)\n\n  const value = values[question.id]\n\n  if (!question || !question.options) {\n    return <Box />\n  }\n\n  const options = question.options.map((o) => {\n    const v = `${question.id}:${o.id}`\n    return {\n      id: v,\n      value: v,\n      name: v,\n      label: translateCopy(o.name),\n    }\n  })\n\n  return (\n    <Box className=\"radio-button-group\" pad={{ horizontal: 'large' }}>\n      <RadioButtonGroup\n        name={translateCopy(question.name) || ''}\n        options={options}\n        value={`${question.id}:${value}`}\n        onChange={(e) => {\n          const id = e.target.value.split(':')[1]\n          props.onChange ? props.onChange(id) : setValue(question, id)\n        }}\n        gap=\"16px\"\n      />\n    </Box>\n  )\n}\n\nexport default SingleSelectRadio\n","import React, { useContext } from 'react'\nimport { Question } from '../../lib/types'\nimport SingleSelect from './SingleSelect'\nimport { FormContext } from '../../contexts/form'\n\ninterface Props {\n  [key: string]: any\n  question: Question\n  onChange: (val: string) => void\n}\n\nconst Boolean: React.FC<Props> = (props) => {\n  const { form, setValue } = useContext(FormContext)\n\n  const question = props.question\n  question.options = [\n    {\n      id: 'true',\n      name: form.instructions['yes'],\n    },\n    {\n      id: 'false',\n      name: form.instructions['no'],\n    },\n  ]\n\n  // Override the SingleSelect's onChange in order to cast the ID (string) to a boolean.\n  const onChange = (id: string) => {\n    setValue(question, id === 'true')\n  }\n\n  return <SingleSelect question={question} onChange={onChange} />\n}\n\nexport default Boolean\n","import React from 'react'\nimport { Box, BoxProps } from 'grommet'\nimport './circle-icon.css'\n\nexport interface Props {\n  color: string\n  size?: number\n}\n\nexport const CircleIcon: React.FC<Props & BoxProps & JSX.IntrinsicElements['div']> = (props) => {\n  const { color, ...otherProps } = props\n  const s = `${props.size || 20}px`\n  const b = `${(props.size || 20) / 2}px`\n\n  return (\n    <Box\n      style={{ height: s, width: s, borderRadius: b }}\n      background={{ color }}\n      flex={{ shrink: 0 }}\n      justify=\"center\"\n      align=\"center\"\n      className=\"circle-icon\"\n      margin=\"none\"\n      {...otherProps}\n    >\n      {props.children}\n    </Box>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Question, Option } from '../../lib/types'\nimport { Box, CheckBox, Paragraph } from 'grommet'\nimport { FormContext } from '../../contexts/form'\nimport { omit } from 'lodash'\nimport { CircleIcon } from '../helper-components/CircleIcon'\n\ninterface Props {\n  value: string[]\n  question: Question\n  onChange: (val: string[]) => void\n  [key: string]: any\n}\n\nconst Multiselect: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, translateCopy } = useContext(FormContext)\n  const value = values[question.id] as string[] | string\n\n  const onSelect = (option: Option) => {\n    // Handle the state of the multiselect, first.\n    const selectedOptions = value ? [...value] : []\n    const selected = !selectedOptions.includes(option.id)\n    if (selected) {\n      // Case A: User selected this option\n      selectedOptions.push(option.id)\n    } else {\n      // Case B: User deselected this option\n      selectedOptions.splice(selectedOptions.indexOf(option.id), 1)\n    }\n\n    // Now handle the additional keys\n    const additionalValues: Record<string, Record<string, Option[]> | undefined> = {}\n    for (const key of question.additionalKeys?.split(',') || []) {\n      if (!option[key]) {\n        continue\n      }\n\n      // Each entry in additionalValues maps a key (f.e. \"benefits\") to a mapping of\n      // section ID to a list of options that enabled that section.\n      additionalValues[key] = { ...(values[key] as any) }\n\n      // Based on whether we just enabled or disabled this option, add/remove this option\n      // from each of the corresponding section.\n      const sections = (option[key] as string).split(',')\n      if (selected) {\n        for (const s of sections) {\n          additionalValues[key]![s] = [...(additionalValues[key]![s] || []), option]\n        }\n      } else {\n        for (const s of sections) {\n          if (additionalValues[key]![s].length === 1) {\n            // If this option is the only option associated with this section, omit the section.\n            additionalValues[key] = omit(additionalValues[key], s)\n          } else {\n            additionalValues[key]![s] = additionalValues[key]![s].filter((o) => o.id !== option.id)\n          }\n        }\n      }\n\n      // If all sections are now hidden, omit this section group key.\n      if (Object.keys(additionalValues[key]!).length === 0) {\n        additionalValues[key] = undefined\n      }\n    }\n\n    setValue(question, selectedOptions.length > 0 ? selectedOptions : undefined, additionalValues)\n  }\n\n  if (!question || !question.options) {\n    return <Box />\n  }\n\n  return (\n    <Box pad={{ horizontal: 'large' }}>\n      {question.options.map((o) => {\n        const isSelected = Boolean(value && value.includes(o.id))\n        return (\n          <Box\n            className={isSelected ? 'checkbox checkbox-selected' : 'checkbox'}\n            key={o.id}\n            margin={{ bottom: '16px' }}\n          >\n            <CheckBox\n              checked={isSelected}\n              label={\n                <Box direction=\"row\">\n                  {o.icon && (\n                    <Box direction=\"column\" justify=\"start\" flex={{ shrink: 0 }} margin={{ right: '16px' }}>\n                      <CircleIcon color={o.icon.color} size={24}>\n                        <Paragraph\n                          fill={true}\n                          margin=\"none\"\n                          color=\"white\"\n                          style={{ fontWeight: 500, fontSize: '16px' }}\n                        >\n                          {o.icon.label}\n                        </Paragraph>\n                      </CircleIcon>\n                    </Box>\n                  )}\n                  <Paragraph margin=\"none\" fill={true}>\n                    {translateCopy(o.name)}\n                  </Paragraph>\n                </Box>\n              }\n              onChange={() => onSelect(o)}\n            />\n          </Box>\n        )\n      })}\n    </Box>\n  )\n}\n\nexport default Multiselect\n","import React, { useContext } from 'react'\nimport { Question } from '../../lib/types'\nimport { Box, TextArea as GrommetTextArea } from 'grommet'\nimport { FormContext } from '../../contexts/form'\n\ninterface Props {\n  question: Question\n  [key: string]: any\n}\n\nconst TextArea: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, errors } = useContext(FormContext)\n  const hasError = errors[question.id]\n\n  return (\n    <Box pad={{ horizontal: 'large' }}>\n      <GrommetTextArea\n        value={values[question.id] as string}\n        onChange={(e) => setValue(question, e.target.value)}\n        style={{ border: hasError ? '#FF4040 1px solid' : 'black 1px solid' }}\n      />\n    </Box>\n  )\n}\n\nexport default TextArea\n","import { Option } from './types'\n\nconst initialStates = [\n  { name: 'Alabama', id: 'al' },\n  { name: 'Alaska', id: 'ak' },\n  { name: 'American Samoa', id: 'as' },\n  { name: 'Arizona', id: 'az' },\n  { name: 'Arkansas', id: 'ar' },\n  { name: 'California', id: 'ca' },\n  { name: 'Colorado', id: 'co' },\n  { name: 'Connecticut', id: 'ct' },\n  { name: 'Delaware', id: 'de' },\n  { name: 'District Of Columbia', id: 'dc' },\n  { name: 'Federated States Of Micronesia', id: 'fm' },\n  { name: 'Florida', id: 'fl' },\n  { name: 'Georgia', id: 'ga' },\n  { name: 'Guam', id: 'gu' },\n  { name: 'Hawaii', id: 'hi' },\n  { name: 'Idaho', id: 'id' },\n  { name: 'Illinois', id: 'il' },\n  { name: 'Indiana', id: 'in' },\n  { name: 'Iowa', id: 'ia' },\n  { name: 'Kansas', id: 'ks' },\n  { name: 'Kentucky', id: 'ky' },\n  { name: 'Louisiana', id: 'la' },\n  { name: 'Maine', id: 'me' },\n  { name: 'Marshall Islands', id: 'mh' },\n  { name: 'Maryland', id: 'md' },\n  { name: 'Massachusetts', id: 'ma' },\n  { name: 'Michigan', id: 'mi' },\n  { name: 'Minnesota', id: 'mn' },\n  { name: 'Mississippi', id: 'ms' },\n  { name: 'Missouri', id: 'mo' },\n  { name: 'Montana', id: 'mt' },\n  { name: 'Nebraska', id: 'ne' },\n  { name: 'Nevada', id: 'nv' },\n  { name: 'New Hampshire', id: 'nh' },\n  { name: 'New Jersey', id: 'nj' },\n  { name: 'New Mexico', id: 'nm' },\n  { name: 'New York', id: 'ny' },\n  { name: 'North Carolina', id: 'nc' },\n  { name: 'North Dakota', id: 'nd' },\n  { name: 'Northern Mariana Islands', id: 'mp' },\n  { name: 'Ohio', id: 'oh' },\n  { name: 'Oklahoma', id: 'ok' },\n  { name: 'Oregon', id: 'or' },\n  { name: 'Palau', id: 'pw' },\n  { name: 'Pennsylvania', id: 'pa' },\n  { name: 'Puerto Rico', id: 'pr' },\n  { name: 'Rhode Island', id: 'ri' },\n  { name: 'South Carolina', id: 'sc' },\n  { name: 'South Dakota', id: 'sd' },\n  { name: 'Tennessee', id: 'tn' },\n  { name: 'Texas', id: 'tx' },\n  { name: 'Utah', id: 'ut' },\n  { name: 'Vermont', id: 'vt' },\n  { name: 'Virgin Islands', id: 'vi' },\n  { name: 'Virginia', id: 'va' },\n  { name: 'Washington', id: 'wa' },\n  { name: 'West Virginia', id: 'wv' },\n  { name: 'Wisconsin', id: 'wi' },\n  { name: 'Wyoming', id: 'wy' },\n]\n\nexport const states: Option[] = initialStates.map((state) => ({\n  name: {\n    en: state.name,\n    es: state.name,\n    zh: state.name,\n  },\n  id: state.id,\n}))\n","import React from 'react'\nimport { states } from '../../lib/states'\nimport Select from './Select'\nimport { Question } from '../../lib/types'\n\ninterface Props {\n  question: Question\n}\n\nconst StateSelect: React.FC<Props> = (props) => {\n  const { question } = props\n  question.options = states\n  return <Select question={question} />\n}\n\nexport default StateSelect\n","import { Question, Values, Form, Section, Option } from '../lib/types'\n\nexport function getSections(\n  sectionIds: Question['sections'],\n  form: Form,\n  values: Values\n): Array<{ section: Section; options: Option[] }> {\n  const { sections } = form\n  if (!sections || !sectionIds) {\n    return []\n  }\n\n  // If we are just directly specifying the list of sections (a Single Select),\n  // just return that.\n  if (sectionIds.include) {\n    return sectionIds.include.map((id) => ({\n      section: sections[id],\n      options: [],\n    }))\n  }\n\n  // Otherwise, we're producing this list of sections from a Multiselect.\n  // In this case, the logic is a bit more complicated.\n  //\n  // We'll produce an ordered list of sections that should be shown.\n  // Each option will provide an ordered list of sections to enable,\n  // which we'll merge together, for example:\n  //\n  //  Option A: ['UA', 'UI-NJ', 'ESL']\n  //  Option B: ['UI-NJ', 'ESL', 'ESIJ']\n  //\n  // Would produce: ['UA', 'UI-NJ', 'ESL', 'ESIJ'].\n  //\n  // You could imagine this as a graph, where every section is a node, and\n  // order is represented by edges between these nodes:\n  //\n  //   Option A: UA <- UI-NJ\n  //   Option B:            <- ESL <- ESIJ\n  //\n  // However, what happens if Option B did not have 'ESL'? In that case, it\n  // wouldn't be clear whether we should place 'ESL' or 'ESIJ' first.\n  //\n  // In that case, we rely on the ordering of sections, as defined in form.yml,\n  // to break ties. We'll refer to this as the section's \"priority\".\n\n  // 1. Look up the priority of all sections:\n  const priorities: Record<string, number> = {}\n  Object.keys(sections).forEach((id, i) => {\n    priorities[id] = i\n  })\n\n  // 2. Produce an ordered list of sections by option:\n  const ordering: Record<string, string[]> = {}\n  // TODO: cleanup this values representation. It can just be a list of options.\n  const value = (values[sectionIds.id!] as Record<string, Option[]>) || {}\n  for (const options of Object.values(value)) {\n    for (const option of options) {\n      // Options can appear more than once, but we only need to pull their list of sections\n      // once, thus the if statement here.\n      if (!ordering[option.id]) {\n        const sectionIDs = (option[sectionIds.id!] as string).split(',')\n        ordering[option.id] = sectionIDs\n      }\n    }\n  }\n\n  const sorted = sortSections(ordering, priorities)\n\n  return sorted.map((id) => ({ section: sections[id], options: value[id] }))\n}\n\nexport function sortSections(ordering: Record<string, string[]>, priorities: Record<string, number>): string[] {\n  // console.log(ordering, priorities)\n\n  // Note: for our use-cases, the number of sections is small. So this just needs to work, not be efficient.\n  const unblocked = new Set<string>()\n  const nonEmptySections = Object.values(ordering).filter((sections) => sections.length > 0)\n  if (nonEmptySections.length === 0) {\n    // Recursive base case.\n    return []\n  }\n\n  for (const s1 of nonEmptySections) {\n    const first = s1[0]\n    const blocked = nonEmptySections.some((s2) => s2.indexOf(first) > 0)\n    if (!blocked) {\n      unblocked.add(first)\n    }\n  }\n\n  let section: string\n  if (unblocked.size > 0) {\n    // We found one or more sections that we could choose next, which don't have\n    // an ordering constraint on another section.\n    // In this case, choose the section from this list with lowest priority.\n    section = [...unblocked][0]\n    for (const other of unblocked) {\n      if (priorities[other] < priorities[section]) {\n        section = other\n      }\n    }\n  } else {\n    // In this case, we found at least one cycle which means there are no sections\n    // without an ordering constraint that prevents us from selecting them. In that\n    // case, we have to relax one of these ordering constraints.\n    //\n    // We'll do this by just picking the lowest priority section next. Technically,\n    // this isn't right -- we should find the cycle and break it. But that's pretty\n    // complicated -- a best-effort solution like this works fine for us.\n    section = nonEmptySections[0][0]\n    for (const sections of nonEmptySections) {\n      const other = sections[0]\n      if (priorities[other] < priorities[section]) {\n        section = other\n      }\n    }\n  }\n\n  // console.log(section)\n  for (const id of Object.keys(ordering)) {\n    const i = ordering[id].indexOf(section)\n    if (i >= 0) {\n      ordering[id].splice(i, 1)\n    }\n  }\n  // console.log(ordering, priorities)\n\n  return [section, ...sortSections(ordering, priorities)]\n}\n","import React from 'react'\n\nconst Caret: React.FC<{ open: boolean }> = (props) => {\n  return (\n    <svg\n      transform={props.open ? 'rotate(90)' : undefined}\n      width=\"9\"\n      height=\"14\"\n      viewBox=\"0 0 9 14\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"caret\"\n    >\n      <path d=\"M1 1L7 7L1 13\" stroke=\"#333333\" strokeWidth=\"2\" />\n    </svg>\n  )\n}\n\nexport default Caret\n","import React, { useContext, useState } from 'react'\nimport { Question } from '../../lib/types'\nimport { FormContext } from '../../contexts/form'\nimport { getSections } from '../../lib/sections'\nimport { Box, Heading, Paragraph } from 'grommet'\nimport { Markdown } from '../helper-components/Markdown'\nimport Caret from './Caret'\nimport { useKeyPress } from '../../hooks/useKeyPress'\nimport { CircleIcon } from '../helper-components/CircleIcon'\n\ninterface Props {\n  question: Question\n}\n\nconst Section: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, form, translateCopy } = useContext(FormContext)\n  const [open, setOpen] = useState<Record<string, boolean>>({})\n  const optionPressed = useKeyPress('Alt')\n\n  if (!question.sections) {\n    // A sections field should always be specified for section question types.\n    return null\n  }\n\n  const sectionGroup = getSections(question.sections, form, values)\n\n  const onToggle = (e: React.MouseEvent, id: string) => {\n    // Handle Alt-pressing, which should expand/collapse all.\n    if (!optionPressed) {\n      // Just expand/collapse this specific option.\n      setOpen({\n        ...open,\n        [id]: !open[id],\n      })\n    } else if (Object.keys(open).length > 0) {\n      // The user alt-clicked and at least one option is open, so collapse all.\n      setOpen({})\n    } else {\n      // The user alt-clicked and all options are closed, so expand all.\n      const o: Record<string, boolean> = {}\n      for (const { section } of sectionGroup) {\n        o[section.title.en] = true\n      }\n      setOpen(o)\n    }\n  }\n\n  return (\n    <Box style={{ backgroundColor: question.sections.color }} pad={{ horizontal: 'large', vertical: 'large' }}>\n      <Heading level={3} margin=\"none\">\n        {translateCopy(question.sections.name)}\n      </Heading>\n      {question.sections.instructions && (\n        <Markdown margin={{ top: 'small' }} size=\"small\">\n          {translateCopy(question.sections.instructions)}\n        </Markdown>\n      )}\n      {sectionGroup.map(({ section, options }, index) => {\n        const icons = options.filter((o) => !!o.icon).map((o) => o.icon!)\n        icons.sort((i1, i2) => i1.label.localeCompare(i2.label))\n        return (\n          <Box\n            background=\"#FFFFFF\"\n            style={{\n              border: '1px solid #CCCCCC',\n              borderRadius: '4px',\n              overflowWrap: 'break-word',\n              transitionDuration: '.2s',\n            }}\n            justify=\"between\"\n            key={`section_${index}`}\n            margin={{ top: 'small' }}\n            className=\"accordion\"\n            overflow=\"hidden\"\n          >\n            <Box\n              height=\"70px\"\n              direction=\"row\"\n              align=\"center\"\n              justify=\"between\"\n              onClick={(e: React.MouseEvent) => onToggle(e, section.title.en)}\n              pad={{ horizontal: '24px' }}\n              className=\"accordion-header\"\n              background={open[section.title.en] ? '#F8F8F8' : '#FFFFFF'}\n              hoverIndicator={{\n                color: '#F8F8F8',\n              }}\n            >\n              <Box>\n                <Heading margin=\"none\" level={5} style={{ color: 'black' }}>\n                  {translateCopy(section.title)}\n                </Heading>\n              </Box>\n              <Box direction=\"row\" justify=\"end\" align=\"center\" flex={{ shrink: 0 }}>\n                {icons.map((icon, i) => (\n                  <Box\n                    direction=\"column\"\n                    justify=\"center\"\n                    flex={{ shrink: 0 }}\n                    margin={{ right: i === icons.length - 1 ? '16px' : '8px' }}\n                    key={icon.label}\n                  >\n                    <CircleIcon color={icon.color} size={24}>\n                      <Paragraph fill={true} margin=\"none\" color=\"white\" style={{ fontWeight: 500, fontSize: '16px' }}>\n                        {icon.label}\n                      </Paragraph>\n                    </CircleIcon>\n                  </Box>\n                ))}\n                <Caret open={open[section.title.en]} />\n              </Box>\n            </Box>\n            <Box\n              pad={{ horizontal: '24px' }}\n              className=\"accordion-content\"\n              style={{ maxHeight: open[section.title.en] ? '500px' : '0px' }}\n            >\n              <Box pad={{ vertical: '16px' }}>\n                <Markdown size=\"small\">{translateCopy(section.content)}</Markdown>\n              </Box>\n            </Box>\n          </Box>\n        )\n      })}\n    </Box>\n  )\n}\n\nexport default Section\n","import { useState, useEffect } from 'react'\n\n// https://usehooks.com/useKeyPress/\nexport const useKeyPress = (targetKey: string) => {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false)\n\n  // Add event listeners\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n    function downHandler(e: KeyboardEvent) {\n      if (e.key === targetKey) {\n        setKeyPressed(true)\n      }\n    }\n\n    // If released key is our target key then set to false\n    const upHandler = (e: KeyboardEvent) => {\n      if (e.key === targetKey) {\n        setKeyPressed(false)\n      }\n    }\n\n    window.addEventListener('keydown', downHandler)\n    window.addEventListener('keyup', upHandler)\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler)\n      window.removeEventListener('keyup', upHandler)\n    }\n  }, [setKeyPressed, targetKey]) // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed\n}\n","import React, { useContext } from 'react'\nimport { Box, TextInput as GrommetTextInput } from 'grommet'\nimport { FormContext } from '../../contexts/form'\nimport { Question } from '../../lib/types'\nimport NumberFormat, { NumberFormatProps } from 'react-number-format'\n\ninterface Props {\n  question: Question\n}\n\nexport const Number: React.FC<Props> = (props) => {\n  const { question } = props\n  const { setValue, errors } = useContext(FormContext)\n\n  const onChange: NumberFormatProps['onValueChange'] = ({ floatValue }) => {\n    setValue(question, floatValue)\n  }\n\n  let typeProps: Partial<NumberFormatProps> = {\n    type: 'tel',\n    allowNegative: false,\n  }\n  if (question.type === 'dollar-amount') {\n    typeProps = {\n      ...typeProps,\n      prefix: '$',\n      thousandSeparator: true,\n      decimalScale: 2,\n    }\n  } else if (question.type === 'integer') {\n    typeProps = {\n      ...typeProps,\n      decimalScale: 0,\n    }\n  } else if (question.type === 'decimal') {\n    typeProps = {\n      ...typeProps,\n      thousandSeparator: true,\n      decimalScale: 2,\n    }\n  } else if (question.type === 'phone') {\n    typeProps = {\n      ...typeProps,\n      decimalScale: 0,\n      format: '+1 (###) ###-####',\n      allowEmptyFormatting: true,\n      mask: '_',\n    }\n  } else if (question.type === 'ssn') {\n    typeProps = {\n      ...typeProps,\n      decimalScale: 0,\n      format: '###-##-####',\n      allowEmptyFormatting: true,\n      mask: '_',\n    }\n  }\n\n  const hasError = Boolean(errors[question.id])\n  return (\n    <Box pad={{ horizontal: 'large' }}>\n      <NumberFormat\n        className={hasError ? 'text-input errored' : 'text-input'}\n        customInput={GrommetTextInput}\n        onValueChange={onChange}\n        style={{ maxWidth: '600px' }}\n        {...typeProps}\n      />\n    </Box>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Question, FileValues, FileValue } from '../../lib/types'\nimport { FormContext } from '../../contexts/form'\nimport { FormNextLink, Checkmark, FormClose } from 'grommet-icons'\nimport { useDropzone } from 'react-dropzone'\nimport { Box, Button, Paragraph, Image } from 'grommet'\nimport { encode } from 'base64-arraybuffer'\nimport './file.css'\nimport { CircleIcon } from '../helper-components/CircleIcon'\n\ninterface Props {\n  [key: string]: any\n  question: Question\n  onChange: (val: string) => void\n}\n\n/**\n * This File component is used to upload a single image or PDF file.\n * It supports drag-and-drop, file upload and image capture.\n *\n * It's built on top of:\n *  - React Dropzone: https://react-dropzone.js.org/\n *  - FileReader API: https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n *\n * The contents of the uploaded file are stored as a base64-encoded binary string\n * inside of the corresponding form value. In the future, we may consider uploading to S3\n * and storing an S3 URL as a form value, but embeddeding the file inside of the\n * claim will make it easier to integrate with state backends and likely means we\n * can get something out the door sooner.\n */\nconst File: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, translateByID } = useContext(FormContext)\n  const value = values[question.id] as FileValues | undefined\n\n  const onDrop = async (acceptedFiles: File[]) => {\n    const files = await Promise.all(\n      acceptedFiles.map((file) => {\n        return new Promise<FileValue | undefined>((resolve) => {\n          const reader = new FileReader()\n\n          reader.onerror = () => {\n            resolve()\n          }\n          reader.onabort = () => {\n            resolve()\n          }\n          // onload fired only after the read operation has finished\n          reader.onload = () => {\n            resolve({\n              name: file.name,\n              type: file.type,\n              size: file.size,\n              contents: encode(reader.result as ArrayBuffer),\n            })\n          }\n          reader.readAsArrayBuffer(file)\n        })\n      })\n    )\n\n    setValue(question, [...(value || []), ...(files.filter((f) => !!f) as FileValue[])])\n  }\n\n  const { getRootProps, getInputProps, isDragActive, isFocused } = useDropzone({\n    minSize: 100, // arbitrary min > 0 (100B)\n    maxSize: 4194304, // 4MB\n    // This handler is fired both on valid and invalid files.\n    onDrop,\n    // Accept PNGs, JPGs and PDFs\n    accept: ['image/png', 'image/jpeg', 'image/jpg', 'application/pdf'],\n  })\n\n  const onRemove = () => {\n    setValue(question, undefined)\n  }\n\n  const color = isDragActive || isFocused ? '#4776F6' : '#CCCCCC'\n\n  return (\n    <>\n      <Box\n        pad=\"large\"\n        gap=\"small\"\n        alignContent=\"center\"\n        align=\"center\"\n        style={{\n          outline: `2px dashed ${color}`,\n          cursor: 'pointer',\n        }}\n        background={{\n          color: '#F6F7F9',\n        }}\n        className=\"file-upload-box\"\n        margin={{ bottom: '12px' }}\n        {...getRootProps()}\n      >\n        <input {...getInputProps()} />\n        <Paragraph margin={{ vertical: 'none' }} color=\"black\">\n          {translateByID('file-uploader-drag-drop')}\n        </Paragraph>\n        <Paragraph margin={{ vertical: 'none' }} color=\"black\">\n          {translateByID('file-uploader-or')}\n        </Paragraph>\n        <Paragraph margin={{ vertical: 'none' }} color=\"#4776F6\" style={{ display: 'flex', fontWeight: 600 }}>\n          {translateByID('file-uploader-choose-file')}\n          <CircleIcon color=\"#4776F6\" margin={{ left: '6px' }}>\n            <FormNextLink color=\"white\" className=\"file-upload-icon\" />\n          </CircleIcon>\n        </Paragraph>\n      </Box>\n      {value &&\n        value.map((v, i) => (\n          <Box direction=\"row\" pad=\"medum\" height=\"75px\" key={i} align=\"center\" justify=\"between\">\n            <Box direction=\"row\">\n              {/* TODO: use other SVGs for PDF/JPEG/etc. when those are available */}\n              <Image src=\"/file.jpg.svg\" width=\"45px\" />\n              <Paragraph margin={{ left: '12px', bottom: '12px' }}>{v.name}</Paragraph>\n            </Box>\n            <Box direction=\"row\" align=\"center\">\n              <Paragraph margin={{ vertical: 'none', right: '12px' }}>\n                {translateByID('file-uploader-uploaded')}\n              </Paragraph>\n              <CircleIcon color=\"#4776F6\">\n                <Checkmark color=\"white\" style={{ width: '12px', height: '12px' }} />\n              </CircleIcon>\n              <Button\n                icon={<FormClose />}\n                onClick={onRemove}\n                size=\"small\"\n                margin={{ left: '20px' }}\n                style={{\n                  borderRadius: '20px',\n                  padding: '3px',\n                }}\n                primary={true}\n                color=\"#eee\"\n                hoverIndicator={{\n                  color: 'lightgrey',\n                }}\n              />\n            </Box>\n          </Box>\n        ))}\n    </>\n  )\n}\n\nexport default File\n","import { Question, QuestionType, Page, Values, Errors } from '../lib/types'\nimport DatePicker from '../components/form-components/DatePicker'\nimport TextInput from '../components/form-components/TextInput'\nimport Select from '../components/form-components/Select'\nimport SingleSelect from '../components/form-components/SingleSelect'\nimport Boolean from '../components/form-components/Boolean'\nimport Multiselect from '../components/form-components/Multiselect'\nimport TextArea from '../components/form-components/TextArea'\nimport StateSelect from '../components/form-components/StateSelect'\nimport Sections from '../components/form-components/Section'\nimport { Number as NumberComponent } from '../components/form-components/Number'\nimport File from '../components/form-components/File'\nimport { Checkbox } from '../components/form-components/Checkbox'\nimport { Box } from 'grommet'\n\n/**\n * Determines if a user can proceed to the next form, if they have:\n * 1) Finished all required questions\n * 2) There are no validation errors\n * @param page\n * @param values\n * @param errors\n */\nexport function canContinue(page: Page, values: Values, errors: Errors): boolean {\n  if (!page) {\n    return true\n  }\n\n  const questions = getFlattenedQuestions(page.questions, values)\n  const questionIds = questions.map((q) => q.id)\n  const requiredQuestions = questions.filter((q) => q.required).map((q) => q.id)\n  return requiredQuestions.every((id) => values[id] !== undefined) && !questionIds.some((id) => errors[id])\n}\n\n/**\n * Given a set of questions, generates a flattened list of 'relevant' questions, including subquestions from switches.\n * @param questions\n * @param values\n */\nexport function getFlattenedQuestions(questions: Question[], values: Values): Question[] {\n  const flattenedQuestions: Question[] = []\n\n  for (const question of questions) {\n    flattenedQuestions.push(question)\n    const { id } = question\n\n    const value = values[id] as string\n    const hasSubQuestions = value !== undefined && question.switch && getSwitch(question.switch, value)\n\n    if (hasSubQuestions) {\n      const subQuestions = getSwitch(question.switch, value)\n      flattenedQuestions.push(...getFlattenedQuestions(subQuestions, values))\n    }\n  }\n\n  return flattenedQuestions\n}\n\nconst typeComponentMappings: Partial<Record<QuestionType, React.FC>> = {\n  shorttext: TextInput as React.FC,\n  date: DatePicker as React.FC,\n  dropdown: Select as React.FC,\n  'single-select': SingleSelect as React.FC,\n  boolean: Boolean as React.FC,\n  multiselect: Multiselect as React.FC,\n  longtext: TextArea as React.FC,\n  'instructions-only': Box,\n  'warning-only': Box,\n  'state-picker': StateSelect as React.FC,\n  decimal: NumberComponent as React.FC,\n  integer: NumberComponent as React.FC,\n  'dollar-amount': NumberComponent as React.FC,\n  phone: NumberComponent as React.FC,\n  ssn: NumberComponent as React.FC,\n  file: File as React.FC,\n  checkbox: Checkbox as React.FC,\n  sections: Sections as React.FC,\n}\n\nexport function getComponent(type: QuestionType): React.FC<{ question: Question }> {\n  return typeComponentMappings[type] || TextInput\n}\n\nexport function getSwitch(questionSwitch: Question['switch'], value: string | string[]): Question[] {\n  if (!questionSwitch || value === undefined) {\n    return []\n  }\n  const switchKeys = Object.keys(questionSwitch).filter((key) => {\n    return (\n      key.split(',').includes(value.toString()) ||\n      (Array.isArray(value) && (value as string[]).some((val) => key.split(',').includes(val)))\n    )\n  })\n\n  if (switchKeys.length === 0) {\n    return []\n  }\n\n  // In case this is a multiselect, always choose the last switch.\n  const switchKey = switchKeys[switchKeys.length - 1]\n\n  // NOTE: we inline definitions in transformInlineDefinitions above, so it'll always be Question[].\n  return questionSwitch[switchKey] as Question[]\n}\n","import React, { useContext } from 'react'\nimport { Question } from '../../lib/types'\nimport { CheckBox as GrommetCheckBox, Paragraph, Box } from 'grommet'\nimport { FormContext } from '../../contexts/form'\nimport classnames from 'classnames'\n\ninterface Props {\n  question: Question\n}\n\nexport const Checkbox: React.FC<Props> = (props) => {\n  const { question, ...rest } = props\n  const { values, setValue, translateCopy, errors } = useContext(FormContext)\n\n  const value = values[question.id]\n  const hasError = Boolean(errors[question.id])\n\n  return (\n    <Box\n      className={classnames('checkbox', {\n        'checkbox-selected': !!value,\n        errored: hasError,\n      })}\n      margin=\"none\"\n      pad={{ horizontal: 'large' }}\n    >\n      <GrommetCheckBox\n        checked={value === true}\n        label={<Paragraph margin=\"none\">{translateCopy(question.options![0].name)}</Paragraph>}\n        onChange={() => setValue(question, !value)}\n        {...rest}\n      />\n    </Box>\n  )\n}\n","import React, { createContext, useEffect } from 'react'\nimport { useLocalStorage } from '../hooks/useLocalStorage'\n\nconst initialState = {\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  /* eslint-disable @typescript-eslint/no-empty-function */\n  language: 'en',\n  setLanguage: (language: string) => {},\n}\nexport const LanguageContext = createContext(initialState)\n\nexport const LanguageProvider: React.FC = (props) => {\n  const [language, setLanguage] = useLocalStorage<string>('papua-selected-language', initialState.language)\n\n  // Check the user's browser's language and automatically match that.\n  useEffect(() => {\n    const codeMap: Record<string, string> = {\n      en: 'en',\n      'en-US': 'en',\n      'en-GB': 'en',\n      es: 'es',\n      zh: 'zh',\n    }\n    const detectedLanguageCode = codeMap[navigator.language]\n\n    if (detectedLanguageCode && !language) {\n      setLanguage(detectedLanguageCode)\n    }\n  }, [language, setLanguage])\n\n  const value = { language: language, setLanguage }\n  return <LanguageContext.Provider value={value}>{props.children}</LanguageContext.Provider>\n}\n","import { useState } from 'react'\n\n// Copied from https://usehooks.com/useLocalStorage/\nexport function useLocalStorage<T>(key: string, defaultValue: T): [T, (value: T) => void] {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? JSON.parse(item) : defaultValue\n    } catch (error) {\n      console.error(error)\n      return defaultValue\n    }\n  })\n\n  const setValue = (value: T) => {\n    try {\n      setStoredValue(value)\n      window.localStorage.setItem(key, JSON.stringify(value))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return [storedValue, setValue]\n}\n","import { Question, Copy, Form, Values, Value } from './types'\nimport validator from 'email-validator'\nimport Joi from '@hapi/joi'\nimport moment from 'moment'\nimport { states } from './states'\n\nfunction getInstructions(form: Form, id: string): Copy {\n  const c = form.instructions[id]\n  if (!c) {\n    throw new Error(`Unknown instructions id: ${id}`)\n  }\n  return c\n}\n\nexport function isQuestionValid(\n  question: Question,\n  value: Value,\n  values: Values,\n  form: Form\n): { errors: Copy[]; dependencies: string[] } {\n  const errors: Copy[] = []\n\n  // Handle required-field checks.\n  if (value === undefined) {\n    if (question.required) {\n      errors.push(getInstructions(form, 'field-is-required'))\n      return { errors, dependencies: [] }\n    } else {\n      // If the question is not required and not set,\n      // go ahead and exit early so we don't surface unnecessary errors.\n      return { errors: [], dependencies: [] }\n    }\n  }\n\n  function validate<T>(schema: Joi.Schema, value: any, copyID: string): value is T {\n    const { error } = schema.strict().options({ presence: 'required' }).validate(value)\n    if (error) {\n      errors.push(getInstructions(form, copyID!))\n      if (process.env.NODE_ENV === 'development') {\n        console.error(error)\n      }\n    }\n    return !error\n  }\n\n  // Handle type-specified validation, which is generic\n  // to the question itself.\n  switch (question.type) {\n    case 'email':\n      if (validate<string>(Joi.string(), value, 'invalid-email')) {\n        if (!validator.validate(value)) {\n          errors.push(getInstructions(form, 'invalid-email'))\n        }\n      }\n      break\n    case 'decimal':\n      validate(Joi.number().precision(2).min(0).max(2147483647), value, 'invalid-decimal')\n      break\n    case 'integer':\n      validate(Joi.number().precision(0).min(0).max(2147483647), value, 'invalid-integer')\n      break\n    case 'dollar-amount':\n      validate(Joi.number().precision(2).min(0).max(2147483647), value, 'invalid-dollar')\n      break\n    case 'shorttext':\n    case 'longtext':\n      validate(\n        Joi.string()\n          .allow(...(question.required ? [] : ['']))\n          .max(question.type === 'shorttext' ? 200 : 10000),\n        value,\n        'invalid-text'\n      )\n      break\n    case 'date':\n      // We should be able to replicate this with joi-date, but I didn't have much\n      // luck with that. Kept hitting undocumented issues with the format function.\n      validate(\n        Joi.string().custom((v: string, helpers) => {\n          const strict = true\n          return moment(v, 'YYYY-MM-DDTHH:mm:ssZ', strict).isValid() ? v : helpers.error('any.invalid')\n        }),\n        value,\n        'invalid-date'\n      )\n      break\n    case 'dropdown':\n    case 'single-select':\n    case 'state-picker':\n      if (validate<string>(Joi.string(), value, 'invalid-select')) {\n        const options = question.type === 'state-picker' ? states : question.options\n        // Check if we selected a pre-defined option id:\n        if (!options?.find((o) => o.id === value)) {\n          errors.push(getInstructions(form, 'invalid-select'))\n        }\n      }\n      break\n    case 'multiselect':\n      if (validate<string[]>(Joi.array().items(Joi.string()), value, 'invalid-select')) {\n        const invalid = value.some((v) => {\n          return !question.options?.find((o) => o.id === v)\n        })\n        if (invalid) {\n          errors.push(getInstructions(form, 'invalid-select'))\n        }\n      }\n      break\n    case 'boolean':\n      validate(Joi.boolean(), value, 'invalid-boolean')\n      break\n    case 'phone':\n      validate(Joi.number().precision(0).min(1000000000).max(9999999999), value, 'invalid-phone')\n      break\n    case 'ssn':\n      validate(Joi.number().precision(0).min(100000000).max(999999999), value, 'invalid-ssn')\n      break\n    case 'arn':\n      validate(Joi.string().regex(/^A[0-9]{7,9}$/), value, 'invalid-arn')\n      break\n    case 'address':\n      // TODO: we should do more validation than this for address, but this depends on the new\n      // UI for entering addresses.\n      validate(Joi.string(), value, 'invalid-address')\n      break\n    case 'instructions-only':\n      // There should not be an answer for this question.\n      errors.push(getInstructions(form, 'invalid-instructions-only'))\n      break\n    case 'file':\n      validate(\n        Joi.array()\n          .min(question.required ? 1 : 0)\n          .max(10)\n          .items(\n            Joi.object({\n              name: Joi.string().optional(),\n              type: Joi.string().valid('image/png', 'image/jpeg', 'image/jpg', 'application/pdf'),\n              size: Joi.number().min(0),\n              contents: Joi.string().min(1),\n            })\n          ),\n        value,\n        'invalid-file'\n      )\n      break\n    case 'checkbox':\n      if (value !== true) {\n        errors.push(getInstructions(form, 'invalid-checkbox'))\n      }\n  }\n\n  // Handle question-specific validation, as specified in the form.\n  const dependencies: string[] = []\n  question.validate?.forEach((validation) => {\n    const { type, value: validationValue, error } = validation\n\n    if (typeof validationValue === 'string' && validationValue.startsWith('id:')) {\n      // If this validation depends on another question, then we'll need to\n      // reevaluate the error state of that field. We track that with dependencies\n      // and the caller of this function is responsible for handling that.\n      dependencies.push(validationValue.slice(3))\n    }\n\n    let isValid\n    if (type === 'regex') {\n      const regex = new RegExp(validationValue as string)\n      isValid = typeof value === 'string' && regex.test(value)\n    } else if (type === 'matches_field') {\n      const id = validationValue.slice(3)\n      isValid = value === values[id]\n    } else if (type === 'min' || type === 'max') {\n      if (question.type === 'date') {\n        const d = moment(value as string, moment.ISO_8601)\n        if (validationValue.startsWith('id:')) {\n          // Compare this date to the corresponding date based on the supplied id.\n          const id = validationValue.slice(3)\n          const other = values[id]\n          if (other === undefined) {\n            // If we haven't specified the other date yet, don't consider that an error.\n            isValid = true\n          } else {\n            const od = moment(other as string, moment.ISO_8601)\n            isValid = type === 'min' ? d.isSameOrAfter(od) : d.isSameOrBefore(od)\n          }\n        } else {\n          // Compare this date to the relative date specified (f.e. \"-14y\").\n          const unit = validationValue[validationValue.length - 1] as 'y' | 'd'\n          const n = Number(validationValue.slice(0, validationValue.length - 1))\n          const p = moment().add(n, unit)\n          isValid = type === 'min' ? d >= p : d <= p\n        }\n      }\n    }\n\n    if (!isValid) {\n      errors.push(error)\n    }\n  })\n\n  return { errors, dependencies }\n}\n","import { Form, Question } from './types'\n\nexport function transformInlineDefinitions(form: Form): Form {\n  if (!form.definitions) {\n    return form\n  }\n\n  const transformInlineDefinitionsQuestions = (questions: Question[]): Question[] => {\n    for (let qi = 0; qi < questions.length; qi++) {\n      const question = questions[qi]\n      if (question.switch) {\n        for (const switchKey of Object.keys(question.switch)) {\n          const oldSwitch = question.switch[switchKey]\n          const newSwitch: Question[] = []\n          for (let si = 0; si < oldSwitch.length; si++) {\n            const value = oldSwitch[si]\n            if (typeof value === 'string' && value.startsWith('definition:')) {\n              const definitionID = value.replace(/^definition:/, '')\n              const definition = form.definitions![definitionID]\n              if (!definition) {\n                console.error(`Unknown question set definition: ${definitionID}`)\n                continue\n              }\n              newSwitch.push(...transformInlineDefinitionsQuestions(definition))\n            } else {\n              newSwitch.push(...transformInlineDefinitionsQuestions([value as Question]))\n            }\n          }\n          questions[qi].switch![switchKey] = newSwitch\n        }\n      }\n    }\n\n    return questions\n  }\n\n  for (let pi = 0; pi < form.pages.length; pi++) {\n    form.pages[pi].questions = transformInlineDefinitionsQuestions(form.pages[pi].questions)\n  }\n\n  return form\n}\n","import React, { createContext, useContext, useState, useEffect, useCallback } from 'react'\nimport formSchema from '../form.schema.json'\nimport { Question, Copy, Form, Value, Values, Errors } from '../lib/types'\nimport { canContinue } from '../forms'\nimport { Box } from 'grommet'\nimport { omit, get } from 'lodash'\nimport { Spinner, Markdown, Card } from '../components/helper-components'\nimport { LanguageContext } from './language'\nimport ky from 'ky'\nimport yaml from 'js-yaml'\nimport Ajv from 'ajv'\nimport { getFlattenedQuestions } from '../forms/index'\nimport { isQuestionValid } from '../lib/validation'\nimport { transformInlineDefinitions } from '../lib/inline'\nimport amplitude from 'amplitude-js'\n\nexport interface FormState {\n  form: Form\n  setValue: (question: Question, value: Value, additionalValues?: Record<string, Value>) => void\n  setError: (id: string, value: Copy[]) => void\n  values: Values\n  errors: Errors\n  translateCopy: <C extends Copy | undefined>(\n    copy: C,\n    variables?: Record<string, string>\n  ) => C extends Copy ? string : string | undefined\n  translateByID: (id: string, variables?: Record<string, string>) => string\n  completion: Record<string, boolean>\n  pageIndex: number\n  setPage: (index: number) => void\n  clearForm: () => void\n}\n\nconst initialState = {\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  /* eslint-disable @typescript-eslint/no-empty-function */\n  form: undefined,\n  values: {},\n  errors: {},\n  setValue: (question: Question, value: Value, additionalValues?: Record<string, Value>) => {},\n  setError: (id: string, value: Copy[]) => {},\n}\n\nexport const FormContext = createContext<FormState>(initialState as any)\n\ntype FormError = {\n  message: string\n  error?: any\n}\n\nexport const FormProvider: React.FC = (props) => {\n  const [form, setForm] = useState<Form | undefined>(initialState.form)\n  const [values, setValues] = useState<Values>(initialState.values)\n  const [errors, setErrors] = useState<Errors>(initialState.errors)\n  const [completion, setCompletion] = useState<Record<string, boolean>>({})\n  const [pageIndex, setPageIndex] = useState<number>(0)\n  const [formValidationError, setFormValidationError] = useState<FormError | undefined>()\n  const { language } = useContext(LanguageContext)\n\n  useEffect(() => {\n    const effect = async () => {\n      // Load the form.yaml\n      //\n      // TODO: experiment with nextjs to see if we can embed this file instead\n      // of fetching it. This'll speed up page load. Next would allow us to\n      // get the benefits of ejecting CRA without ejecting.\n      const [form, formSample] = await Promise.all([ky.get('form.yml').text(), ky.get('form.sample.yml').text()])\n\n      let contents, sampleContents\n      try {\n        // Parse the YAML -> JSON\n        contents = yaml.safeLoad(form, {\n          json: true,\n        })\n        sampleContents = yaml.safeLoad(formSample, {\n          json: true,\n        })\n      } catch (err) {\n        setFormValidationError({\n          message: 'Failed to parse YAML form',\n          error: err,\n        })\n        return\n      }\n\n      // States will build their own form in `form.yml` from the example in `form.sample.yml`.\n      // By default, we'll use the sample version until a state starts building their form in\n      // `form.yml`.\n      const useSample = contents === null\n      let rawForm = useSample ? sampleContents : contents\n\n      // During local development, we validate the form structure against\n      // our JSON Schema and render any errors.\n      if (process.env.NODE_ENV === 'development') {\n        const ajv = new Ajv({\n          allErrors: true,\n        })\n        const validator = ajv.compile(formSchema)\n        validator(rawForm)\n        if (validator.errors) {\n          console.error(validator.errors)\n          const errors = validator.errors.filter(({ dataPath, message }) => {\n            // Filter out error messages about the default (empty) form.yml schema.\n            return !(\n              dataPath === '' &&\n              message &&\n              ['should be string,null', 'should match exactly one schema in oneOf'].includes(message)\n            )\n          })\n          setFormValidationError({\n            message: `${useSample ? 'form.sample.yml' : 'form.yml'} failed validation\\n${errors.map(\n              (d) => `\\n  - ${d.dataPath} ${d.message}`\n            )}`,\n          })\n        }\n      }\n\n      // Inline any top-level quesiton set definitions:\n      rawForm = transformInlineDefinitions(rawForm)\n\n      setForm(rawForm)\n    }\n\n    effect().catch((err) => {\n      console.error(err)\n    })\n  }, [])\n\n  const setError = (key: string, value: Copy[]) => setErrors({ ...errors, [key]: value })\n  const setValue = (question: Question, value: Value, additionalValues?: Record<string, Value>) => {\n    console.log('[Google Analytics] sending event: Answer Updated')\n    gtag('event', 'Answer Updated', {\n      id: question.id,\n      value,\n    })\n    amplitude.getInstance().logEvent('Answer Updated', {\n      id: question.id,\n      value,\n    })\n\n    // Insert the new value, plus additionaValues, into values and remove any fields\n    // that would now map to `undefined`.\n    let newValues = { ...values, [question.id]: value, ...(additionalValues || {}) }\n    if (value === undefined) {\n      newValues = omit(newValues, question.id)\n    }\n    newValues = omit(\n      newValues,\n      Object.keys(additionalValues || {}).filter((k) => additionalValues![k] === undefined)\n    )\n    setValues(newValues)\n\n    if (process.env.NODE_ENV === 'development') {\n      console.log('Form values: ', newValues)\n    }\n\n    const { errors: validationErrors, dependencies } = isQuestionValid(question, value, values, form!)\n    let newErrors =\n      validationErrors.length > 0 ? { ...errors, [question.id]: validationErrors } : omit(errors, question.id)\n    // Note: we only support question references within the same page. That's probably good enough,\n    // but we could expand this in the future if needed.\n    const page = form!.pages[pageIndex]\n    for (const dep of dependencies) {\n      if (values[dep] !== undefined) {\n        const q = getFlattenedQuestions(page.questions, values).find((q) => q.id === dep)!\n        // Note: we ignore deps here. We could recursively traverse them if we want, but we'll need\n        // to avoid cycles. So we just handle a single level of depth (which should be good enough) for now.\n        const { errors: depErrors } = isQuestionValid(q, values[dep], newValues, form!)\n        newErrors = depErrors.length > 0 ? { ...newErrors, [q.id]: depErrors } : omit(newErrors, q.id)\n      }\n    }\n    setErrors(newErrors)\n\n    const canContinueFromPage = canContinue(page, newValues, newErrors)\n    setCompletion({\n      ...completion,\n      [pageIndex]: canContinueFromPage,\n    })\n  }\n\n  const translateCopy = useCallback(\n    (copy, variables) => {\n      if (!copy) {\n        return undefined\n      }\n\n      let text = copy[language]\n\n      // Apply templating variables by looking for `{{VARIABLE_NAME}}` fields.\n      // The value is evaluated as the first truthy value of:\n      //  1. If the key starts with `id:`, then the remainder of the key is considered a question ID\n      //     and the corresponding value from the current set of form values is used.\n      //  2. If a matching key is supplied in the `variables` argument to `translateCopy`.\n      //  3. If a matching key exists in the form's top-level variables map.\n      //  4. If nothing else, then the variable is left as-is (f.e.: {{VARIABLE_NAME}}).\n      text = text.replace(/\\{\\{([a-ziA-Z0-9._:-]+)\\}\\}/g, (m, key) => {\n        // `key` is the regex-captured value inside the curly braces:\n        let value = get(variables || form?.variables, key)\n        if (key.startsWith('id:')) {\n          const questionID = key.slice(3)\n          value = values[questionID] ? String(values[questionID]) : value\n        }\n        // If we don't recognize this variable, then default to rendering\n        // all of `{{VARIABLE_NAME}}` since that'll make the issue clearest.\n        return value ? value : m\n      })\n\n      return text\n    },\n    [form, language, values]\n  ) as FormState['translateCopy']\n\n  const translateByID = (id: string, variables?: Record<string, string>): string => {\n    return translateCopy(form!.instructions[id], variables)\n  }\n\n  const setPage = (index: number) => {\n    setPageIndex(index)\n    window.scrollTo(0, 0)\n  }\n\n  /**\n   * This hook is purely for testing, where it'll prefill form values so we can test\n   * functionality later on in the form.\n   */\n  // const [prefilled, setPrefilled] = useState(false)\n  // useEffect(() => {\n  //   if (prefilled || !form || process.env.NODE_ENV !== 'development') return\n\n  //   // Initialize form with some starter values for testing.\n  //   // Note Number values won't render, but the value is there.\n  //   const testValues: Record<string, [Value] | [Value, Record<string, Value>]> = {\n  //     /* eslint-disable @typescript-eslint/camelcase */\n  //     agreement: [true],\n  //     employed_in_new_jersey: ['laid-off-in-new-jersey'],\n  //     'relationship-to-employer': ['receiving-partial-unemployment'],\n  //   }\n  //   for (const [id, v] of Object.entries(testValues)) {\n  //     const [value, additionalValues] = v\n  //     const vv = values[id]\n  //     if (vv === value || (Array.isArray(value) && Array.isArray(vv) && value.length === vv.length)) {\n  //       continue\n  //     }\n\n  //     for (const [i, page] of form.pages.entries()) {\n  //       for (const question of getFlattenedQuestions(page.questions, values)) {\n  //         if (question.id === id) {\n  //           if (i !== pageIndex) {\n  //             setPageIndex(i)\n  //             // 1337 hacks\n  //             return\n  //           }\n\n  //           setValue(question, value, additionalValues)\n  //           // 1337 hacks\n  //           return\n  //         }\n  //       }\n  //     }\n  //   }\n\n  //   // now that we've prefilled the values, stop overwriting them with the initial values.\n  //   setPrefilled(true)\n  // })\n\n  const clearForm = () => {\n    setValues({})\n    setErrors({})\n    setPageIndex(0)\n    setCompletion({})\n  }\n\n  useEffect(() => {\n    if (form) {\n      // Update the page title\n      document.title = translateCopy(form.title)\n\n      // Upsert the page description\n      let description = document.querySelector('meta[name=\"description\"]')\n      if (!description) {\n        description = document.createElement('meta')\n        description.setAttribute('name', 'description')\n        document.head.appendChild(description)\n      }\n      description.setAttribute('content', translateCopy(form.description))\n    }\n  }, [form, translateCopy])\n\n  if (formValidationError) {\n    const content = `\n## ⚠️ Form Parsing Error\n\n${formValidationError.message}\n\n${formValidationError.error ? '```' + JSON.stringify(formValidationError.error, null, 2) + '```' : ''}`\n\n    return (\n      <Card\n        margin={{ vertical: 'medium', horizontal: 'auto' }}\n        pad={{ horizontal: 'medium', vertical: 'small' }}\n        width={{ max: '800px' }}\n      >\n        <Box pad=\"medium\">\n          <Markdown>{content}</Markdown>\n        </Box>\n      </Card>\n    )\n  }\n\n  if (!form) {\n    return (\n      <Box pad=\"medium\">\n        <Spinner />\n      </Box>\n    )\n  }\n\n  const value: FormState = {\n    form,\n    values,\n    setValue,\n    errors,\n    setError,\n    translateCopy,\n    translateByID,\n    completion,\n    pageIndex,\n    setPage,\n    clearForm,\n  }\n\n  return <FormContext.Provider value={value}>{props.children}</FormContext.Provider>\n}\n","import React, { useContext } from 'react'\nimport { Button } from './helper-components'\nimport { Card } from './helper-components'\nimport { Box, Text, Image, ResponsiveContext, Heading, Paragraph } from 'grommet'\n// import { LanguageContext } from '../contexts/language'\nimport { FormContext } from '../contexts/form'\nimport { range } from 'lodash'\nimport { StyledSelect } from './helper-components/StyledSelect'\nimport { FormTrash } from 'grommet-icons'\n// import amplitude from 'amplitude-js'\n\ninterface Props {\n  pages: string[]\n}\n\n// NOTE: bring back once we have Spanish translations.\n// const languages = [\n//   { title: 'English', value: 'en' },\n//   // NJ isn't using Chinese language translations\n//   // { title: '中文', value: 'zh' },\n//   { title: 'Español', value: 'es' },\n// ]\n\nconst Sidebar: React.FC<Props> = (props) => {\n  const { pages } = props\n  const { values, clearForm, translateByID, form, pageIndex, setPage, completion } = useContext(FormContext)\n  // const { language, setLanguage } = useContext(LanguageContext)\n  const size = useContext(ResponsiveContext)\n\n  const currentPage = pages[pageIndex]\n  const maxCompletedPage = range(0, form.pages.length)\n    .map<number>((i) => (completion[i] ? 1 : 0))\n    .reduce((i, j) => i + j, 0)\n  const percent = Math.floor((maxCompletedPage / pages.length) * 100)\n\n  const canClickPage = (i: number) => {\n    return range(0, i).every((index) => completion[index])\n  }\n\n  // const onChangeLanguage = ({ value }: any) => {\n  //   console.log('[Google Analytics] sending event: Change Language')\n  //   gtag('event', 'Change Language', {\n  //     prevLanguage: language,\n  //     newLanguage: value,\n  //   })\n  //   amplitude.getInstance().logEvent('Change Language', {\n  //     prevLanguage: language,\n  //     newLanguage: value,\n  //   })\n\n  //   setLanguage(value)\n  // }\n\n  return (\n    <Box\n      flex={{ shrink: 0 }}\n      margin={size === 'large' ? { left: 'small' } : { top: 'small' }}\n      direction=\"column\"\n      width={size === 'large' ? '350px' : '100%'}\n      style={{ maxWidth: '850px' }}\n    >\n      <Card pad=\"medium\" direction={size === 'medium' ? 'row' : 'column'}>\n        {form.seal && (\n          <Box margin={{ bottom: 'medium' }}>\n            <Image src={form.seal} style={{ maxHeight: '175px', maxWidth: '100%', objectFit: 'contain' }} />\n          </Box>\n        )}\n        <Box flex={{ grow: 1 }} margin={{ left: size === 'medium' ? '24px' : 'none' }}>\n          {/* NOTE: bring this back once we have validated Spanish translations in. */}\n          {/* <Box>\n            <Heading level={4} margin=\"none\">\n              {translateByID('language')}\n            </Heading>\n            <StyledSelect\n              a11yTitle=\"select language\"\n              margin={{ top: 'xsmall' }}\n              options={languages}\n              labelKey=\"title\"\n              valueKey={{ key: 'value', reduce: true }}\n              value={language}\n              onChange={onChangeLanguage}\n            />\n          </Box> */}\n          <Box margin={{ top: '24px' }}>\n            <Box direction=\"row\" justify=\"between\">\n              <Heading level={4} margin=\"none\">\n                {translateByID('progress')}\n              </Heading>\n              <Paragraph margin=\"none\">{percent}%</Paragraph>\n            </Box>\n            <Box\n              margin={{ top: 'xsmall' }}\n              style={{ width: '100%', height: '12px', borderRadius: '12px', background: '#F2F2F2' }}\n            >\n              <Box style={{ width: `${percent}%`, height: '100%', borderRadius: '12px', background: '#3A80C2' }} />\n            </Box>\n            <Box margin={{ top: '24px' }}>\n              <Button\n                onClick={clearForm}\n                disabled={Object.keys(values).length === 0}\n                label={translateByID('clear-form')}\n                icon={<FormTrash style={{ marginRight: '4px' }} />}\n              />\n            </Box>\n          </Box>\n          <Box margin={{ top: '24px' }}>\n            {size === 'large' ? (\n              /* On larger screens, we show all section titles as a list */\n              pages.map((page, i) => {\n                return (\n                  <Text\n                    style={{\n                      cursor: canClickPage(i) ? 'pointer' : 'not-allowed',\n                      opacity: currentPage === page ? '100%' : canClickPage(i) ? '50%' : '20%',\n                    }}\n                    // TODO: In production, add a `canClickPage(i) && ` below to prevent folks from jumping forward.\n                    onClick={() => canClickPage(i) && setPage(i)}\n                    margin={{ bottom: 'xsmall' }}\n                    key={page}\n                  >\n                    {page}\n                  </Text>\n                )\n              })\n            ) : (\n              <>\n                {/* On small screens, we collapse the section titles to a Select */}\n                <Heading level={4} margin=\"none\">\n                  {translateByID('section')}\n                </Heading>\n                <StyledSelect\n                  a11yTitle=\"select section\"\n                  margin={{ top: 'xsmall' }}\n                  options={pages.map((page, i) => ({ page, i, disabled: !canClickPage(i) }))}\n                  labelKey=\"page\"\n                  valueKey={{ key: 'i', reduce: true }}\n                  disabledKey=\"disabled\"\n                  value={pageIndex as any} /* These type definitions don't support values as numbers */\n                  // TODO: In production, add a `canClickPage(i) && ` below to prevent folks from jumping forward.\n                  onChange={({ value: i }) => setPage(i)}\n                />\n              </>\n            )}\n          </Box>\n        </Box>\n      </Card>\n    </Box>\n  )\n}\n\nexport default Sidebar\n","import React, { useContext, useEffect } from 'react'\nimport { Question as QuestionInterface } from '../lib/types'\nimport { getComponent, getSwitch } from '../forms'\nimport { getSections } from '../lib/sections'\nimport { Box, Heading, Text } from 'grommet'\nimport { FormContext } from '../contexts/form'\nimport { Markdown } from './helper-components'\nimport amplitude from 'amplitude-js'\n\ninterface Props {\n  question: QuestionInterface\n  previous: QuestionInterface | undefined\n}\n\nconst Question: React.FC<Props> = (props) => {\n  const { question, previous } = props\n  const Component = getComponent(question.type)\n\n  const { values, errors, form, translateCopy, translateByID } = useContext(FormContext)\n\n  const value = values[question.id]\n  const error = errors[question.id]\n  let switchComponent: HTMLDivElement | null = null\n\n  useEffect(() => {\n    if (value && form.variables?.autoscroll) {\n      switchComponent?.scrollIntoView({ behavior: 'smooth' })\n    }\n  }, [value, form, switchComponent])\n\n  useEffect(() => {\n    amplitude.getInstance().logEvent('Question Rendered', {\n      id: question.id,\n      value,\n    })\n  })\n\n  // If question is \"sections\" but there are no sections, don't render.\n  if (question.type === 'sections' && getSections(question.sections, form, values).length === 0) {\n    return <Box />\n  }\n\n  const isNote = ['instructions-only', 'warning-only'].includes(question.type)\n  const isStriped = ['instructions-only', 'warning-only'].includes(question.type)\n\n  return (\n    <Box\n      direction=\"row\"\n      // Remove margin between sections:\n      margin={{ top: question.type === 'sections' && previous?.type === 'sections' ? 'none' : '48px' }}\n    >\n      {/* Optionally inserts a vertical stripe alongside the question: */}\n      {isStriped && (\n        <Box\n          flex={{ grow: 0, shrink: 0 }}\n          basis=\"8px\"\n          background={question.type === 'warning-only' ? '#FFAE00' : '#3A80C2'}\n        />\n      )}\n\n      <Box direction=\"column\" pad={{ vertical: isStriped ? '16px' : 'none' }}>\n        {(question.name || question.instructions) && (\n          <Box\n            fill={true}\n            className=\"question-heading-box\"\n            pad={{ horizontal: 'large' }}\n            margin={{ bottom: isNote ? 'none' : '16px' }}\n          >\n            {question.name && (\n              <Box direction=\"row\" align=\"start\">\n                <Heading\n                  style={{\n                    maxWidth: 'none',\n                  }}\n                  level={isNote ? 2 : 4}\n                  margin={{ horizontal: 'none', top: 'none', bottom: question.instructions ? '8px' : 'none' }}\n                >\n                  {translateCopy(question.name)}\n                  {!question.required && !isNote && question.type !== 'sections' && (\n                    <em> ({translateByID('optional')})</em>\n                  )}\n                </Heading>\n              </Box>\n            )}\n            {question.instructions && <Markdown size=\"small\">{translateCopy(question.instructions)}</Markdown>}\n          </Box>\n        )}\n\n        <Component question={question} />\n        {error && (\n          <Box pad={{ horizontal: 'large' }}>\n            {error.map((e) => (\n              <Text key={e.en} margin={{ top: 'xsmall' }} color=\"#E42906\">\n                {translateCopy(e)}\n              </Text>\n            ))}\n          </Box>\n        )}\n        <Box ref={(el) => (switchComponent = el)}>\n          {question.switch &&\n            getSwitch(question.switch, value as string | string[])?.map((q, i, all) => (\n              <Question question={q} previous={i > 0 ? all[i - 1] : undefined} key={q.id} />\n            ))}\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport default Question\n","import React, { ReactNode } from 'react'\nimport { Page, Text, View, Document, StyleSheet, Font, Link } from '@react-pdf/renderer'\nimport { Form, Values, Question, Option } from '../lib/types'\nimport { getFlattenedQuestions } from '../forms'\nimport { getSections } from '../lib/sections'\nimport { FormState } from '../contexts/form'\nimport moment from 'moment'\nimport regular from '../fonts/Roboto-Regular.ttf'\nimport medium from '../fonts/Roboto-Medium.ttf'\nimport bold from '../fonts/Roboto-Bold.ttf'\n\nFont.register({\n  family: 'Roboto',\n  fonts: [\n    { src: regular, fontWeight: 'normal' },\n    { src: medium, fontWeight: 'medium' },\n    { src: bold, fontWeight: 'bold' },\n  ],\n})\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    fontFamily: 'Roboto',\n  },\n  pageContent: {\n    padding: '48px',\n    flexGrow: 1,\n  },\n  heading: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  questionTitle: {\n    fontSize: 14,\n    fontWeight: 'medium',\n    marginBottom: 8,\n  },\n  questionAnswer: {\n    fontSize: 12,\n  },\n  sectionTitle: {\n    fontSize: 12,\n    marginBottom: 8,\n    fontWeight: 'medium',\n  },\n  sectionContent: { fontSize: 10 },\n  questionSection: {\n    paddingTop: 12,\n    borderTop: '1px solid black',\n  },\n})\n\nconst linkRegex = /\\[([^[]+)\\](\\(.*\\))/gm\nconst urlRegex = /\\((http[^)]+)\\)/\n\nfunction stripBasicMarkdown(content: string) {\n  if (!content) {\n    return content\n  }\n\n  content = content.replace('#', '').replace(/\\*/g, '')\n\n  const contentParts: any[] = content.split(linkRegex)\n  const finalParts: any[] = []\n\n  contentParts.forEach((part) => {\n    if (urlRegex.test(part)) {\n      const url = part.replace(/[{()}]/g, '')\n      finalParts.push(': ')\n      finalParts.push(\n        <Link style={{ marginLeft: 8, color: '#7D4CDB' }} src={url}>\n          {url}\n        </Link>\n      )\n      return\n    }\n    finalParts.push(part)\n  })\n\n  return finalParts\n}\n\ninterface Props {\n  form: Form\n  values: Values\n  translateCopy: FormState['translateCopy']\n}\n\nconst Icon: React.FC<{ option: Option }> = ({ option }) => {\n  return (\n    <View\n      key={option.id}\n      style={{\n        marginRight: 8,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: option.icon ? option.icon.color : 'grey',\n        height: 20,\n        width: 20,\n        borderRadius: 10,\n      }}\n    >\n      <Text style={{ fontSize: 12 }}>{option.icon?.label}</Text>\n    </View>\n  )\n}\n\nconst PDF: React.FC<Props> = (props) => {\n  const { translateCopy, form, values } = props\n  let questions: Question[] = []\n\n  form.pages.forEach((p) => {\n    questions = questions.concat(getFlattenedQuestions(p.questions, values))\n  })\n\n  function getValue(question: Question, values: Values): string | ReactNode {\n    if (question.type === 'multiselect' && values[question.id]) {\n      const multiselectAnswers = (values[question.id] as string[]).map((optionId) => {\n        const option = question.options!.find((o) => o.id === optionId)\n        if (!option) {\n          return <View />\n        }\n        if (!option.icon) {\n          return `\\n• ${translateCopy(option.name)}`\n        }\n        return (\n          <View\n            style={{ alignItems: 'flex-start', marginBottom: 8, display: 'flex', flexDirection: 'row' }}\n            key={question.id}\n          >\n            <Icon option={option} />\n            <Text style={{ fontSize: 12, width: '90%' }}>{translateCopy(option.name)}</Text>\n          </View>\n        )\n      })\n      return <View>{multiselectAnswers}</View>\n    }\n    if (question.type === 'single-select') {\n      const option = question.options!.find((o) => o.id === values[question.id])\n      if (option) {\n        return <Text style={styles.questionAnswer}>{translateCopy(option.name)}</Text>\n      }\n    }\n    if (question.type === 'checkbox') {\n      return <Text style={styles.questionAnswer}>{translateCopy(question.options![0].name)}</Text>\n    }\n    if (question.type === 'sections') {\n      return (\n        <View>\n          <Text style={styles.questionTitle}>{translateCopy(question.sections?.name)}</Text>\n          {getSections(question.sections, form, values).map(({ section, options }, i) => (\n            <View\n              wrap={false}\n              style={{\n                padding: 12,\n                border: '1px solid black',\n                backgroundColor: '#F8F8F8',\n                marginBottom: 12,\n                marginTop: i === 3 ? 48 : 0,\n              }}\n              key={`${translateCopy(section.title)}_${i}`}\n            >\n              <View\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  justifyContent: 'space-between',\n                  alignItems: 'flex-start',\n                  marginBottom: 12,\n                }}\n              >\n                <Text style={styles.sectionTitle}>{translateCopy(section.title)}</Text>\n                <View style={{ display: 'flex', flexDirection: 'row' }}>\n                  {options.map((o) => (\n                    <Icon key={o.id} option={o} />\n                  ))}\n                </View>\n              </View>\n              <Text style={styles.sectionContent}>{stripBasicMarkdown(translateCopy(section.content))}</Text>\n            </View>\n          ))}\n        </View>\n      )\n    }\n\n    return <View />\n  }\n\n  return (\n    <Document>\n      <Page size=\"A4\" style={styles.page}>\n        <View style={styles.pageContent}>\n          <Text style={styles.heading}>{translateCopy(form.title)}</Text>\n          <Text style={{ fontSize: 12, marginBottom: 20 }}>Completed {moment().format('MMMM DD, YYYY')}</Text>\n          <Text style={{ fontSize: 12, marginBottom: 20 }}>\n            Below is a summary of your responses and the benefits and protections that may be relevant for you, based on\n            the answers you provided.\n          </Text>\n\n          {questions.map((q, i) => {\n            const value = getValue(q, values)\n            const name = translateCopy(q.name)\n            const isPresentationalQuestion = q.type === 'sections' || q.type === 'instructions-only'\n            const hasPageBreak = q.type === 'instructions-only' || q.id === 'terminal-eligibility-job-protections'\n            if (!value || (q.type === 'sections' && getSections(q.sections, form, values).length === 0)) {\n              return <View />\n            }\n            return (\n              <View\n                break={hasPageBreak}\n                style={{ marginTop: hasPageBreak ? 32 : 0, marginBottom: 32 }}\n                key={`${q.id}_${i}`}\n              >\n                <Text style={styles.questionTitle}>\n                  {isPresentationalQuestion ? stripBasicMarkdown(translateCopy(q.instructions!)) : `${i + 1}. ${name}`}\n                </Text>\n\n                {value}\n              </View>\n            )\n          })}\n        </View>\n      </Page>\n    </Document>\n  )\n}\n\nexport default PDF\n","import React, { useContext, useEffect, useState } from 'react'\nimport { Card, Button, Markdown } from './helper-components'\nimport { Box, ResponsiveContext, Heading } from 'grommet'\nimport Sidebar from './Sidebar'\nimport { FormContext } from '../contexts/form'\nimport Question from './Question'\nimport { FormPrevious, FormNext } from 'grommet-icons'\nimport PDF from './PDF'\nimport { pdf } from '@react-pdf/renderer'\nimport amplitude from 'amplitude-js'\n\nconst Form: React.FC<{}> = () => {\n  const { form, translateByID, translateCopy, completion, pageIndex, setPage, values } = useContext(FormContext)\n  const size = useContext(ResponsiveContext)\n\n  const pageTitles = [...form.pages.map((page) => translateCopy(page.title))]\n\n  const pageComponents = [\n    ...form.pages.map((page) => (\n      <Box direction=\"column\" justify=\"start\" key={page.heading.en} margin=\"none\">\n        <Box pad={{ horizontal: 'large' }}>\n          <Heading margin={{ horizontal: 'none', top: 'none', bottom: page.instructions ? '24px' : 'none' }} level={3}>\n            {translateCopy(page.heading)}\n          </Heading>\n          {page.instructions && <Markdown size=\"small\">{translateCopy(page.instructions)}</Markdown>}\n        </Box>\n        {page.questions.map((question, i) => (\n          <Question question={question} previous={i > 0 ? page.questions[i - 1] : undefined} key={question.id} />\n        ))}\n      </Box>\n    )),\n  ]\n\n  const onClickNext = () => setPage(pageIndex + 1)\n  const onClickBack = () => setPage(pageIndex - 1)\n\n  const [previousURL, setPreviousURL] = useState<string>()\n  const onDownload = async () => {\n    console.log('[Google Analytics] sending event: Download')\n    gtag('event', 'Download')\n    amplitude.getInstance().logEvent('Download')\n\n    // NOTE: we use the imperative react-pdf API here instead of `BlobProvider` because BlobProvider\n    // renders the PDF in the foreground on document update, which blocks the UI. We only want to render\n    // the PDF after the user clicks on the download button so that we don't block UI updates as the\n    // user completes the form.\n    const fileName = 'new-jersey-eligiblity.pdf'\n    const blob = await pdf(<PDF form={form} values={values} translateCopy={translateCopy} />).toBlob()\n\n    if (!blob) {\n      // TODO: we should consider incorporating Sentry here.\n      gtag('event', 'PDF Generation Failed')\n      amplitude.getInstance().logEvent('PDF Generation Failed')\n      console.error('Failed to generate PDF')\n      return\n    }\n\n    // For most browsers, we can use the HTML5 download API. But for IE, we have to use\n    // the msSaveBlob API. This code is based on the react-pdf codebase.\n    if (window.navigator.msSaveBlob) {\n      window.navigator.msSaveBlob(blob, fileName)\n      return\n    }\n\n    // Attach a <a> element that we'll use to trigger the HTML5 download API\n    // for this blob:\n    const a = document.createElement('a')\n    a.setAttribute('style', 'display: none;')\n    a.setAttribute('target', '_blank')\n    document.body.appendChild(a)\n    const url = window.URL.createObjectURL(blob)\n    a.setAttribute('href', url)\n    a.setAttribute('download', fileName)\n    a.click()\n    if (previousURL) {\n      window.URL.revokeObjectURL(previousURL)\n    }\n    setPreviousURL(url)\n  }\n\n  // Track page views\n  useEffect(() => {\n    if (!form) {\n      return\n    }\n\n    console.log('[Google Analytics] sending page call: ', form.pages[pageIndex].title.en)\n    gtag('event', 'page_view', {\n      title: form.pages[pageIndex].title.en,\n    })\n    amplitude.getInstance().logEvent('Page View', {\n      title: form.pages[pageIndex].title.en,\n    })\n  }, [form, pageIndex])\n\n  return (\n    <Box\n      align=\"center\"\n      pad=\"medium\"\n      direction=\"column\"\n      width=\"100%\"\n      style={{ maxWidth: size === 'large' ? '1200px' : '850px' }}\n    >\n      <Box\n        width=\"100%\"\n        height=\"100%\"\n        justify=\"center\"\n        direction={size === 'large' ? 'row' : 'column'}\n        align={size === 'large' ? 'start' : 'center'}\n      >\n        <Card justify=\"between\" flex={{ grow: 1, shrink: 1 }} pad={{ vertical: '48px' }}>\n          {pageComponents[pageIndex]}\n          <Box justify=\"between\" pad={{ horizontal: 'large' }} margin={{ top: '48px' }} direction=\"row\">\n            {(pageIndex > 0 && (\n              <Button onClick={onClickBack} label={translateByID('back')} icon={<FormPrevious />} />\n            )) || <Box />}\n            {pageIndex + 1 < pageTitles.length && (\n              <Button\n                primary={pageIndex === 0}\n                onClick={onClickNext}\n                disabled={!completion[pageIndex]}\n                icon={<FormNext />}\n                reverse={true}\n                label={pageIndex === 0 ? translateByID('get-started') : translateByID('next')}\n              />\n            )}\n            {pageIndex === pageTitles.length - 1 && null}\n            {pageIndex === pageTitles.length - 1 && (\n              <Button\n                primary={true}\n                disabled={!completion[pageIndex]}\n                label=\"Download\"\n                onClick={() => completion[pageIndex] && onDownload()}\n              />\n            )}\n          </Box>\n        </Card>\n        <Sidebar pages={pageTitles} />\n      </Box>\n    </Box>\n  )\n}\n\nexport default Form\n","import React, { useContext } from 'react'\nimport { Box, Image, Paragraph, ResponsiveContext } from 'grommet'\nimport './USDR.css'\n\n/**\n * The USDR component wraps an underlying component with USDR branding.\n */\nexport const USDR: React.FC = (props) => {\n  /**\n   * - Header with USDR logo, app name, link to GitHub\n   * - Footer with \"built by etc\", links to socials\n   */\n  return (\n    <Box direction=\"column\" height={{ min: '100vh' }}>\n      <Box>\n        <Header />\n      </Box>\n\n      <Box flex={{ grow: 1 }} align=\"center\">\n        {props.children}\n      </Box>\n\n      <Box>\n        <Footer />\n      </Box>\n    </Box>\n  )\n}\n\nconst Header: React.FC = () => {\n  // For now, we will not render a header.\n  return null\n\n  // return (\n  //   <Box background={{ color: '#FFFFFF' }} elevation=\"xsmall\" align=\"center\">\n  //     <Box\n  //       width=\"100%\"\n  //       justify=\"start\"\n  //       style={{ maxWidth: '1200px' }}\n  //       pad={{ horizontal: 'medium', vertical: '16px' }}\n  //       direction=\"row\"\n  //       align=\"center\"\n  //     >\n  //       <a href=\"https://www.usdigitalresponse.org/\" target=\"_blank\" rel=\"noopener noreferrer\" tabIndex={-1}>\n  //         <Image style={{ display: 'block' }} width=\"32px\" src=\"./USDR-icon-BW.png\" margin={{ right: '12px' }} />\n  //       </a>\n  //       <Heading level={4} margin=\"none\">\n  //         Pandemic Unemployment Assistance Demo\n  //       </Heading>\n  //     </Box>\n  //   </Box>\n  // )\n}\n\nconst Footer: React.FC = () => {\n  const size = useContext(ResponsiveContext)\n\n  return (\n    <Box background={{ color: '#FFFFFF' }} elevation=\"medium\" align=\"center\">\n      <Box\n        width=\"100%\"\n        justify=\"between\"\n        style={{ maxWidth: size === 'large' ? '1200px' : '850px' }}\n        pad={{ vertical: '16px', horizontal: 'medium' }}\n        direction=\"row\"\n        align=\"center\"\n        className=\"usdr-box\"\n      >\n        <Box justify=\"start\" direction=\"row\" align=\"center\">\n          <Paragraph style={{ fontWeight: 600, flexShrink: 0 }} size=\"small\">\n            Built by\n          </Paragraph>\n          <a href=\"https://www.usdigitalresponse.org/\" target=\"_blank\" rel=\"noopener noreferrer\" tabIndex={-1}>\n            <Image\n              style={{ display: 'block' }}\n              width=\"100px\"\n              src=\"./USDR-full-logo-color.png\"\n              margin={{ horizontal: '12px' }}\n            />\n          </a>\n          <Paragraph size=\"small\" style={{ flexShrink: 1 }}>\n            a nonpartisan effort to assist the U.S. government.\n          </Paragraph>\n        </Box>\n\n        <Box direction=\"row\" align=\"center\">\n          <Paragraph size=\"small\">\n            Run with{' '}\n            <span role=\"img\" aria-label=\"love\">\n              ❤️\n            </span>{' '}\n            by the{' '}\n            <a href=\"https://innovation.nj.gov/\" style={{ color: 'inherit' }}>\n              New Jersey Office of Innovation\n            </a>\n          </Paragraph>\n\n          <a href=\"https://github.com/newjersey/dol-eligibility-tool/\" style={{ margin: '4px 0 0 12px' }}>\n            <svg height=\"20\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"20\" aria-hidden=\"true\">\n              <path\n                fillRule=\"evenodd\"\n                d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"\n              ></path>\n            </svg>\n          </a>\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Grommet } from 'grommet'\nimport './App.css'\nimport Form from './components/Form'\nimport { LanguageProvider } from './contexts/language'\nimport { FormProvider } from './contexts/form'\nimport { USDR } from './components/USDR'\nimport values from 'object.values'\nimport { TextEncoder } from 'fastestsmallesttextencoderdecoder'\nimport amplitude from 'amplitude-js'\n\namplitude.getInstance().init('f97e7157248bb243a19ad46f17cdf2d7')\n\n// Load shims\nif (!Object.values) {\n  values.shim()\n}\nif (!window.TextEncoder) {\n  window.TextEncoder = TextEncoder\n}\n\nconst sizing = {\n  header: '26px',\n  subheader: '18px',\n  body: '18px',\n  detail: '14px',\n}\n\nconst theme = {\n  global: {\n    breakpoints: {\n      small: {\n        value: 550,\n      },\n      medium: {\n        value: 1050,\n      },\n    },\n    colors: {\n      text: {\n        dark: 'white',\n        light: 'black',\n      },\n    },\n    focus: {\n      border: {\n        color: '#bfcffb',\n      },\n    },\n    text: {\n      align: 'left',\n    },\n    selected: {\n      background: '#F2F2F2',\n      color: 'black',\n    },\n    control: {\n      border: {\n        color: 'black',\n        radius: '4px',\n      },\n    },\n  },\n  paragraph: {\n    small: { size: sizing.detail },\n    medium: { size: sizing.body },\n    large: { size: sizing.body },\n    xlarge: { size: sizing.body },\n    xxlarge: { size: sizing.body },\n  },\n  heading: {\n    level: {\n      1: {\n        small: { size: sizing.header },\n        medium: { size: sizing.header },\n        large: { size: sizing.header },\n        xlarge: { size: sizing.header },\n        xxlarge: { size: sizing.header },\n      },\n      2: {\n        small: { size: sizing.header },\n        medium: { size: sizing.header },\n        large: { size: sizing.header },\n        xlarge: { size: sizing.header },\n        xxlarge: { size: sizing.header },\n      },\n      3: {\n        small: { size: sizing.header },\n        medium: { size: sizing.header },\n        large: { size: sizing.header },\n        xlarge: { size: sizing.header },\n        xxlarge: { size: sizing.header },\n      },\n      4: {\n        small: { size: sizing.subheader },\n        medium: { size: sizing.subheader },\n        large: { size: sizing.subheader },\n        xlarge: { size: sizing.subheader },\n        xxlarge: { size: sizing.subheader },\n      },\n      5: {\n        small: { size: sizing.subheader },\n        medium: { size: sizing.subheader },\n        large: { size: sizing.subheader },\n        xlarge: { size: sizing.subheader },\n        xxlarge: { size: sizing.subheader },\n      },\n      6: {\n        small: { size: sizing.detail },\n        medium: { size: sizing.detail },\n        large: { size: sizing.detail },\n        xlarge: { size: sizing.detail },\n        xxlarge: { size: sizing.detail },\n      },\n    },\n  },\n  select: {\n    icons: {\n      color: '#000000',\n    },\n    options: {\n      text: {\n        color: 'black',\n      },\n    },\n    container: {\n      borderRadius: '4px',\n    },\n  },\n  radioButton: {\n    gap: '16px',\n  },\n  button: {\n    border: {\n      color: 'transparent',\n    },\n    primary: {\n      color: '#4776f6',\n    },\n  },\n  checkBox: {\n    color: '#FFFFFF',\n    check: {\n      color: '#205EFF',\n    },\n    gap: '16px',\n  },\n}\n\nfunction App() {\n  // `theme as any` because grommet has incomplete TS definitions\n  return (\n    <Grommet className=\"App\" theme={theme as any}>\n      <LanguageProvider>\n        <FormProvider>\n          <USDR>\n            <Form />\n          </USDR>\n        </FormProvider>\n      </LanguageProvider>\n    </Grommet>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}